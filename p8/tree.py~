
arb = [0,1,6,3,7,9,4,8,19]

def insertar(v,p): #valor(o nodo), posicion
	if p == len(arb):
		arb.append(v)
		
	elif p < len(arb):
		if hijos(p) == 1 or hijos(p) ==3:
			aux = arb[p]
			arb[p] = v
			insertar(aux, 2*p)
			# para 2 intercmbiar con el 2p +1 
		elif(hijos(p) == 2):
			aux = arb[p]
			arb[p] = v
			insertar(aux,2*p+1)
		elif hijos(p) == 0:
			print("hijos=0")
			crecer(2*p)
			arb[2*p] = arb[p]
			arb[p] = v
			



def hijos(p):
	if (len(arb)-1 >= p):	#no existe, fuera de rango
		

		if len(arb)-1 >= (2*p) and arb[2*p] != None: #tiene hijo izquierdo
			if len(arb)-1 >= 2*p+1 and arb[2*p+1]!= None:
				return 3	#tiene 2hijos

			return 1		#tiene 1 hijo

		elif( len(arb)-1 >= 2*p+1 and arb[2*p+1]!= None ):	
			return 2

		else: 	
			return 0		#tiene 0 hijos

	else:
		return -1
	
def crecer(i):
	j = i - len(arb)+1
	for l in range(j):
		arb.append(None)


def decrecer():
	global arb
	while(arb[len(arb) -1] == None):
		arb = arb[:len(arb)-1]



def eliminar(p):
	if (hijos(p) !=-1 ):
		if(hijos(p) == 0):
			arb[p] = None # deprecated: 0
		elif(hijos(p) == 1  or hijos(p) ==3 ):
			arb[p] = arb[2*p]
			eliminar(2*p)
		
		elif(hijos(p) == 2 ):
			arb[p] = arb[2*p+1]
			eliminar(2*p+1)
			
	decrecer()





print(arb)
#print hijos(5)
eliminar(1)
print(arb)
insertar(1,1)
insertar(25,7)
insertar(35,7)
insertar(45,7)
eliminar(7)
eliminar(7)
eliminar(7)

print(arb)


